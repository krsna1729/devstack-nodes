diff --git a/bess_of_agent.py b/bess_of_agent.py
index 715b0f1..5ea72ae 100755
--- a/bess_of_agent.py
+++ b/bess_of_agent.py
@@ -17,7 +17,10 @@ import os
 from collections import namedtuple
 logging.basicConfig(level=logging.ERROR)
 
-PHY_NAME = "dpif"
+PHY_NAME = "eth2"
+dpid = 1
+n_tables = 254
+
 dp = 'bess_datapath_instance'
 
 ofp_port_names = '''port_no hw_addr name config state
@@ -126,7 +129,7 @@ def switch_proc(message, ofchannel):
     # TODO: Acquire lock
 
     if msg.header.type == OFPT_FEATURES_REQUEST:
-        channel.send(b.ofp_switch_features(b.ofp_header(4, OFPT_FEATURES_REPLY, 0, msg.header.xid), 1, 2, 3, 0, 0xF))
+        channel.send(b.ofp_switch_features(b.ofp_header(4, OFPT_FEATURES_REPLY, 0, msg.header.xid), dpid, 0, n_tables, 0, 0xF))
 
     elif msg.header.type == OFPT_GET_CONFIG_REQUEST:
         channel.send(b.ofp_switch_config(b.ofp_header(4, OFPT_GET_CONFIG_REPLY, 0, msg.header.xid), 0, 0xffe5))
@@ -135,11 +138,10 @@ def switch_proc(message, ofchannel):
         channel.send(b.ofp_role_request(b.ofp_header(4, OFPT_ROLE_REPLY, 0, msg.header.xid), msg.role, msg.generation_id))
 
     elif msg.header.type == OFPT_FLOW_MOD:
-        if msg.cookie not in flows:
-            flows[msg.cookie] = msg
-        else:
-            print "I already have this FlowMod: Cookie", \
-                msg.cookie, oxm.parse_list(flows[msg.cookie].match), (flows[msg.cookie].instructions)
+        print msg
+        if msg.cookie in flows:
+            print "I already have this FlowMod: Cookie", msg.cookie
+        flows[msg.cookie] = msg        #msg.cookie, oxm.parse_list(flows[msg.cookie].match), (flows[msg.cookie].instructions)
 
     elif msg.header.type == OFPT_MULTIPART_REQUEST:
         if msg.type == OFPMP_FLOW:
@@ -185,7 +187,7 @@ def switch_proc(message, ofchannel):
     # TODO: Release lock
 
 
-def of_agent_start(ctl_ip='127.0.0.1', port=6653):
+def of_agent_start(ctl_ip='192.168.50.20', port=6653):
 
     global channel
     socket = twink.sched.socket
